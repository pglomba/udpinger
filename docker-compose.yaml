version: '3.1'

services:
  node1:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: node1
    restart: always
    ports:
      - "1051:1051/udp"
      - "2051:2051/tcp"
    command: /app/udpinger --config /app/example-configs/node1.yaml
  node2:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: node2
    restart: always
    ports:
      - "1052:1052/udp"
      - "2052:2052/tcp"
    command: /app/udpinger --config /app/example-configs/node2.yaml
  node3:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: node3
    restart: always
    ports:
      - "1053:1053/udp"
      - "2053:2053/tcp"
    command: /app/udpinger --config /app/example-configs/node3.yaml
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
volumes:
  prom_data: